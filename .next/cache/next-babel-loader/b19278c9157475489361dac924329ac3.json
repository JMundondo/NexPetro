{"ast":null,"code":"\"use strict\";\n\nvar _s = $RefreshSig$();\n\nvar _interopRequireWildcard3 = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.render = render;\nexports.renderError = renderError;\nexports.default = exports.emitter = exports.router = exports.version = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"@babel/runtime/helpers/interopRequireWildcard\"));\n\nrequire(\"@next/polyfill-module\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _headManagerContext = require(\"../next-server/lib/head-manager-context\");\n\nvar _mitt = _interopRequireDefault(require(\"../next-server/lib/mitt\"));\n\nvar _routerContext = require(\"../next-server/lib/router-context\");\n\nvar _router = require(\"../next-server/lib/router/router\");\n\nvar _isDynamic = require(\"../next-server/lib/router/utils/is-dynamic\");\n\nvar querystring = _interopRequireWildcard3(require(\"../next-server/lib/router/utils/querystring\"));\n\nvar envConfig = _interopRequireWildcard3(require(\"../next-server/lib/runtime-config\"));\n\nvar _utils = require(\"../next-server/lib/utils\");\n\nvar _headManager = _interopRequireDefault(require(\"./head-manager\"));\n\nvar _pageLoader = _interopRequireWildcard3(require(\"./page-loader\"));\n\nvar _performanceRelayer = _interopRequireDefault(require(\"./performance-relayer\"));\n\nvar _router2 = require(\"./router\");\n/* global location */\n\n\nconst data = JSON.parse(document.getElementById('__NEXT_DATA__').textContent);\nwindow.__NEXT_DATA__ = data;\nconst version = \"9.5.5\";\nexports.version = version;\nconst {\n  props: hydrateProps,\n  err: hydrateErr,\n  page,\n  query,\n  buildId,\n  assetPrefix,\n  runtimeConfig,\n  dynamicIds,\n  isFallback,\n  head: initialHeadData,\n  locales,\n  defaultLocale\n} = data;\nlet {\n  locale\n} = data;\nconst prefix = assetPrefix || ''; // With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time\n// So, this is how we do it in the client side at runtime\n\n__webpack_public_path__ = `${prefix}/_next/`; //eslint-disable-line\n// Initialize next/config with the environment configuration\n\nenvConfig.setConfig({\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: runtimeConfig || {}\n});\nlet asPath = (0, _utils.getURL)(); // make sure not to attempt stripping basePath for 404s\n\nif ((0, _router.hasBasePath)(asPath)) {\n  asPath = (0, _router.delBasePath)(asPath);\n}\n\nasPath = (0, _router.delLocale)(asPath, locale);\n\nif (process.env.__NEXT_i18n_SUPPORT) {\n  const {\n    normalizeLocalePath\n  } = require('../next-server/lib/i18n/normalize-locale-path');\n\n  if (isFallback && locales) {\n    const localePathResult = normalizeLocalePath(asPath, locales);\n\n    if (localePathResult.detectedLocale) {\n      asPath = asPath.substr(localePathResult.detectedLocale.length + 1);\n      locale = localePathResult.detectedLocale;\n    }\n  }\n}\n\nconst pageLoader = new _pageLoader.default(buildId, prefix, page);\n\nconst register = _ref => {\n  let [r, f] = _ref;\n  return pageLoader.registerPage(r, f);\n};\n\nif (window.__NEXT_P) {\n  // Defer page registration for another tick. This will increase the overall\n  // latency in hydrating the page, but reduce the total blocking time.\n  window.__NEXT_P.map(p => setTimeout(() => register(p), 0));\n}\n\nwindow.__NEXT_P = [];\nwindow.__NEXT_P.push = register;\nconst headManager = (0, _headManager.default)(initialHeadData);\nconst appElement = document.getElementById('__next');\nlet lastAppProps;\nlet lastRenderReject;\nlet webpackHMR;\nlet router;\nexports.router = router;\nlet CachedComponent;\nlet cachedStyleSheets;\nlet CachedApp, onPerfEntry;\n\nclass Container extends _react.default.Component {\n  componentDidCatch(componentErr, info) {\n    this.props.fn(componentErr, info);\n  }\n\n  componentDidMount() {\n    this.scrollToHash(); // We need to replace the router state if:\n    // - the page was (auto) exported and has a query string or search (hash)\n    // - it was auto exported and is a dynamic route (to provide params)\n    // - if it is a client-side skeleton (fallback render)\n\n    if (router.isSsr && (isFallback || data.nextExport && ((0, _isDynamic.isDynamicRoute)(router.pathname) || location.search) || hydrateProps && hydrateProps.__N_SSG && location.search)) {\n      // update query on mount for exported pages\n      router.replace(router.pathname + '?' + String(querystring.assign(querystring.urlQueryToSearchParams(router.query), new URLSearchParams(location.search))), asPath, {\n        // @ts-ignore\n        // WARNING: `_h` is an internal option for handing Next.js\n        // client-side hydration. Your app should _never_ use this property.\n        // It may change at any time without notice.\n        _h: 1,\n        // Fallback pages must trigger the data fetch, so the transition is\n        // not shallow.\n        // Other pages (strictly updating query) happens shallowly, as data\n        // requirements would already be present.\n        shallow: !isFallback\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.scrollToHash();\n  }\n\n  scrollToHash() {\n    let {\n      hash\n    } = location;\n    hash = hash && hash.substring(1);\n    if (!hash) return;\n    const el = document.getElementById(hash);\n    if (!el) return; // If we call scrollIntoView() in here without a setTimeout\n    // it won't scroll properly.\n\n    setTimeout(() => el.scrollIntoView(), 0);\n  }\n\n  render() {\n    if (false) {\n      return this.props.children;\n    } else {\n      const {\n        ReactDevOverlay\n      } = require('@next/react-dev-overlay/lib/client');\n\n      return /*#__PURE__*/_react.default.createElement(ReactDevOverlay, null, this.props.children);\n    }\n  }\n\n}\n\nconst emitter = (0, _mitt.default)();\nexports.emitter = emitter;\n\nvar _default = async function () {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  // This makes sure this specific lines are removed in production\n  if (true) {\n    webpackHMR = opts.webpackHMR;\n  }\n\n  const {\n    page: app,\n    mod\n  } = await pageLoader.loadPage('/_app');\n  CachedApp = app;\n\n  if (mod && mod.reportWebVitals) {\n    onPerfEntry = _ref2 => {\n      let {\n        id,\n        name,\n        startTime,\n        value,\n        duration,\n        entryType,\n        entries\n      } = _ref2;\n      // Combines timestamp with random number for unique ID\n      const uniqueID = `${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n      let perfStartEntry;\n\n      if (entries && entries.length) {\n        perfStartEntry = entries[0].startTime;\n      }\n\n      mod.reportWebVitals({\n        id: id || uniqueID,\n        name,\n        startTime: startTime || perfStartEntry,\n        value: value == null ? duration : value,\n        label: entryType === 'mark' || entryType === 'measure' ? 'custom' : 'web-vital'\n      });\n    };\n  }\n\n  let initialErr = hydrateErr;\n\n  try {\n    ;\n    ({\n      page: CachedComponent,\n      styleSheets: cachedStyleSheets\n    } = await pageLoader.loadPage(page));\n\n    if (true) {\n      const {\n        isValidElementType\n      } = require('react-is');\n\n      if (!isValidElementType(CachedComponent)) {\n        throw new Error(`The default export is not a React Component in page: \"${page}\"`);\n      }\n    }\n  } catch (error) {\n    // This catches errors like throwing in the top level of a module\n    initialErr = error;\n  }\n\n  if (true) {\n    const {\n      getNodeError\n    } = require('@next/react-dev-overlay/lib/client'); // Server-side runtime errors need to be re-thrown on the client-side so\n    // that the overlay is rendered.\n\n\n    if (initialErr) {\n      if (initialErr === hydrateErr) {\n        setTimeout(() => {\n          let error;\n\n          try {\n            // Generate a new error object. We `throw` it because some browsers\n            // will set the `stack` when thrown, and we want to ensure ours is\n            // not overridden when we re-throw it below.\n            throw new Error(initialErr.message);\n          } catch (e) {\n            error = e;\n          }\n\n          error.name = initialErr.name;\n          error.stack = initialErr.stack;\n          const node = getNodeError(error);\n          throw node;\n        });\n      } // We replaced the server-side error with a client-side error, and should\n      // no longer rewrite the stack trace to a Node error.\n      else {\n        setTimeout(() => {\n          throw initialErr;\n        });\n      }\n    }\n  }\n\n  if (window.__NEXT_PRELOADREADY) {\n    await window.__NEXT_PRELOADREADY(dynamicIds);\n  }\n\n  exports.router = router = (0, _router2.createRouter)(page, query, asPath, {\n    initialProps: hydrateProps,\n    pageLoader,\n    App: CachedApp,\n    Component: CachedComponent,\n    initialStyleSheets: cachedStyleSheets,\n    wrapApp,\n    err: initialErr,\n    isFallback: Boolean(isFallback),\n    subscription: (_ref3, App) => {\n      let {\n        Component,\n        styleSheets,\n        props,\n        err\n      } = _ref3;\n      return render({\n        App,\n        Component,\n        styleSheets,\n        props,\n        err\n      });\n    },\n    locale,\n    locales,\n    defaultLocale\n  }); // call init-client middleware\n\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    Promise.resolve().then(() => (0, _interopRequireWildcard2.default)(require('next-plugin-loader?middleware=on-init-client!'))).then(initClientModule => {\n      return initClientModule.default({\n        router\n      });\n    }).catch(initClientErr => {\n      console.error('Error calling client-init for plugins', initClientErr);\n    });\n  }\n\n  const renderCtx = {\n    App: CachedApp,\n    Component: CachedComponent,\n    styleSheets: cachedStyleSheets,\n    props: hydrateProps,\n    err: initialErr\n  };\n\n  if (false) {\n    render(renderCtx);\n    return emitter;\n  } else {\n    return {\n      emitter,\n      render,\n      renderCtx\n    };\n  }\n};\n\nexports.default = _default;\n\nasync function render(renderingProps) {\n  if (renderingProps.err) {\n    await renderError(renderingProps);\n    return;\n  }\n\n  try {\n    await doRender(renderingProps);\n  } catch (renderErr) {\n    // bubble up cancelation errors\n    if (renderErr.cancelled) {\n      throw renderErr;\n    }\n\n    if (true) {\n      // Ensure this error is displayed in the overlay in development\n      setTimeout(() => {\n        throw renderErr;\n      });\n    }\n\n    await renderError((0, _extends2.default)({}, renderingProps, {\n      err: renderErr\n    }));\n  }\n} // This method handles all runtime and debug errors.\n// 404 and 500 errors are special kind of errors\n// and they are still handle via the main render method.\n\n\nfunction renderError(renderErrorProps) {\n  const {\n    App,\n    err\n  } = renderErrorProps; // In development runtime errors are caught by our overlay\n  // In production we catch runtime errors using componentDidCatch which will trigger renderError\n\n  if (true) {\n    // A Next.js rendering runtime error is always unrecoverable\n    // FIXME: let's make this recoverable (error in GIP client-transition)\n    webpackHMR.onUnrecoverableError(); // We need to render an empty <App> so that the `<ReactDevOverlay>` can\n    // render itself.\n\n    return doRender({\n      App: () => null,\n      props: {},\n      Component: () => null,\n      styleSheets: []\n    });\n  }\n\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    Promise.resolve().then(() => (0, _interopRequireWildcard2.default)(require('next-plugin-loader?middleware=on-error-client!'))).then(onClientErrorModule => {\n      return onClientErrorModule.default({\n        err\n      });\n    }).catch(onClientErrorErr => {\n      console.error('error calling on-error-client for plugins', onClientErrorErr);\n    });\n  } // Make sure we log the error to the console, otherwise users can't track down issues.\n\n\n  console.error(err);\n  return pageLoader.loadPage('/_error').then(_ref4 => {\n    let {\n      page: ErrorComponent,\n      styleSheets\n    } = _ref4;\n    // In production we do a normal render with the `ErrorComponent` as component.\n    // If we've gotten here upon initial render, we can use the props from the server.\n    // Otherwise, we need to call `getInitialProps` on `App` before mounting.\n    const AppTree = wrapApp(App);\n    const appCtx = {\n      Component: ErrorComponent,\n      AppTree,\n      router,\n      ctx: {\n        err,\n        pathname: page,\n        query,\n        asPath,\n        AppTree\n      }\n    };\n    return Promise.resolve(renderErrorProps.props ? renderErrorProps.props : (0, _utils.loadGetInitialProps)(App, appCtx)).then(initProps => doRender((0, _extends2.default)({}, renderErrorProps, {\n      err,\n      Component: ErrorComponent,\n      styleSheets,\n      props: initProps\n    })));\n  });\n} // If hydrate does not exist, eg in preact.\n\n\nlet isInitialRender = typeof _reactDom.default.hydrate === 'function';\nlet reactRoot = null;\n\nfunction renderReactElement(reactEl, domEl) {\n  if (process.env.__NEXT_REACT_MODE !== 'legacy') {\n    if (!reactRoot) {\n      const opts = {\n        hydrate: true\n      };\n      reactRoot = process.env.__NEXT_REACT_MODE === 'concurrent' ? _reactDom.default.unstable_createRoot(domEl, opts) : _reactDom.default.unstable_createBlockingRoot(domEl, opts);\n    }\n\n    reactRoot.render(reactEl);\n  } else {\n    // mark start of hydrate/render\n    if (_utils.ST) {\n      performance.mark('beforeRender');\n    } // The check for `.hydrate` is there to support React alternatives like preact\n\n\n    if (isInitialRender) {\n      _reactDom.default.hydrate(reactEl, domEl, markHydrateComplete);\n\n      isInitialRender = false;\n\n      if (onPerfEntry && _utils.ST) {\n        (0, _performanceRelayer.default)(onPerfEntry);\n      }\n    } else {\n      _reactDom.default.render(reactEl, domEl, markRenderComplete);\n    }\n  }\n}\n\nfunction markHydrateComplete() {\n  if (!_utils.ST) return;\n  performance.mark('afterHydrate'); // mark end of hydration\n\n  performance.measure('Next.js-before-hydration', 'navigationStart', 'beforeRender');\n  performance.measure('Next.js-hydration', 'beforeRender', 'afterHydrate');\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-hydration').forEach(onPerfEntry);\n  }\n\n  clearMarks();\n}\n\nfunction markRenderComplete() {\n  if (!_utils.ST) return;\n  performance.mark('afterRender'); // mark end of render\n\n  const navStartEntries = performance.getEntriesByName('routeChange', 'mark');\n\n  if (!navStartEntries.length) {\n    return;\n  }\n\n  performance.measure('Next.js-route-change-to-render', navStartEntries[0].name, 'beforeRender');\n  performance.measure('Next.js-render', 'beforeRender', 'afterRender');\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-render').forEach(onPerfEntry);\n    performance.getEntriesByName('Next.js-route-change-to-render').forEach(onPerfEntry);\n  }\n\n  clearMarks();\n  ['Next.js-route-change-to-render', 'Next.js-render'].forEach(measure => performance.clearMeasures(measure));\n}\n\nfunction clearMarks() {\n  ;\n  ['beforeRender', 'afterHydrate', 'afterRender', 'routeChange'].forEach(mark => performance.clearMarks(mark));\n}\n\nfunction AppContainer(_ref5) {\n  let {\n    children\n  } = _ref5;\n  return /*#__PURE__*/_react.default.createElement(Container, {\n    fn: error => renderError({\n      App: CachedApp,\n      err: error\n    }).catch(err => console.error('Error rendering page: ', err))\n  }, /*#__PURE__*/_react.default.createElement(_routerContext.RouterContext.Provider, {\n    value: (0, _router2.makePublicRouterInstance)(router)\n  }, /*#__PURE__*/_react.default.createElement(_headManagerContext.HeadManagerContext.Provider, {\n    value: headManager\n  }, children)));\n}\n\n_c = AppContainer;\n\nconst wrapApp = App => wrappedAppProps => {\n  const appProps = (0, _extends2.default)({}, wrappedAppProps, {\n    Component: CachedComponent,\n    err: hydrateErr,\n    router\n  });\n  return /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(App, appProps));\n};\n\nfunction doRender(_ref6) {\n  let {\n    App,\n    Component,\n    props,\n    err,\n    styleSheets\n  } = _ref6;\n  Component = Component || lastAppProps.Component;\n  props = props || lastAppProps.props;\n  const appProps = (0, _extends2.default)({}, props, {\n    Component,\n    err,\n    router\n  }); // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.\n\n  lastAppProps = appProps;\n  let canceled = false;\n  let resolvePromise;\n  const renderPromise = new Promise((resolve, reject) => {\n    if (lastRenderReject) {\n      lastRenderReject();\n    }\n\n    resolvePromise = () => {\n      lastRenderReject = null;\n      resolve();\n    };\n\n    lastRenderReject = () => {\n      canceled = true;\n      lastRenderReject = null;\n      const error = new Error('Cancel rendering route');\n      error.cancelled = true;\n      reject(error);\n    };\n  }); // This function has a return type to ensure it doesn't start returning a\n  // Promise. It should remain synchronous.\n\n  function onStart() {\n    if ( // We can skip this during hydration. Running it wont cause any harm, but\n    // we may as well save the CPU cycles.\n    isInitialRender || // We use `style-loader` in development, so we don't need to do anything\n    // unless we're in production:\n    true) {\n      return false;\n    }\n\n    const currentStyleTags = (0, _pageLoader.looseToArray)(document.querySelectorAll('style[data-n-href]'));\n    const currentHrefs = new Set(currentStyleTags.map(tag => tag.getAttribute('data-n-href')));\n    styleSheets.forEach(_ref7 => {\n      let {\n        href,\n        text\n      } = _ref7;\n\n      if (!currentHrefs.has(href)) {\n        const styleTag = document.createElement('style');\n        styleTag.setAttribute('data-n-href', href);\n        styleTag.setAttribute('media', 'x');\n        document.head.appendChild(styleTag);\n        styleTag.appendChild(document.createTextNode(text));\n      }\n    });\n    return true;\n  }\n\n  function onCommit() {\n    if ( // We use `style-loader` in development, so we don't need to do anything\n    // unless we're in production:\n    false && // We can skip this during hydration. Running it wont cause any harm, but\n    // we may as well save the CPU cycles:\n    !isInitialRender && // Ensure this render was not canceled\n    !canceled) {\n      const desiredHrefs = new Set(styleSheets.map(s => s.href));\n      const currentStyleTags = (0, _pageLoader.looseToArray)(document.querySelectorAll('style[data-n-href]'));\n      const currentHrefs = currentStyleTags.map(tag => tag.getAttribute('data-n-href')); // Toggle `<style>` tags on or off depending on if they're needed:\n\n      for (let idx = 0; idx < currentHrefs.length; ++idx) {\n        if (desiredHrefs.has(currentHrefs[idx])) {\n          currentStyleTags[idx].removeAttribute('media');\n        } else {\n          currentStyleTags[idx].setAttribute('media', 'x');\n        }\n      } // Reorder styles into intended order:\n\n\n      let referenceNode = document.querySelector('noscript[data-n-css]');\n\n      if ( // This should be an invariant:\n      referenceNode) {\n        styleSheets.forEach(_ref8 => {\n          let {\n            href\n          } = _ref8;\n          const targetTag = document.querySelector(`style[data-n-href=\"${href}\"]`);\n\n          if ( // This should be an invariant:\n          targetTag) {\n            referenceNode.parentNode.insertBefore(targetTag, referenceNode.nextSibling);\n            referenceNode = targetTag;\n          }\n        });\n      } // Finally, clean up server rendered stylesheets:\n\n\n      (0, _pageLoader.looseToArray)(document.querySelectorAll('link[data-n-p]')).forEach(el => {\n        el.parentNode.removeChild(el);\n      }); // Force browser to recompute layout, which should prevent a flash of\n      // unstyled content:\n\n      getComputedStyle(document.body, 'height');\n    }\n\n    resolvePromise();\n  }\n\n  const elem = /*#__PURE__*/_react.default.createElement(Root, {\n    callback: onCommit\n  }, /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(App, appProps)));\n\n  onStart(); // We catch runtime errors using componentDidCatch which will trigger renderError\n\n  renderReactElement(process.env.__NEXT_STRICT_MODE ? /*#__PURE__*/_react.default.createElement(_react.default.StrictMode, null, elem) : elem, appElement);\n  return renderPromise;\n}\n\nfunction Root(_ref9) {\n  _s();\n\n  let {\n    callback,\n    children\n  } = _ref9;\n\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  _react.default.useLayoutEffect(() => callback(), [callback]);\n\n  if (process.env.__NEXT_TEST_MODE) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    _react.default.useEffect(() => {\n      window.__NEXT_HYDRATED = true;\n\n      if (window.__NEXT_HYDRATED_CB) {\n        window.__NEXT_HYDRATED_CB();\n      }\n    }, []);\n  }\n\n  return children;\n}\n\n_s(Root, \"Gjgl5rfcc2T4sFnfEMfRvL6K4Q4=\");\n\n_c2 = Root;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Root\");","map":{"version":3,"sources":["../../client/index.tsx"],"names":["data","JSON","document","window","version","process","__NEXT_VERSION","props","err","dynamicIds","head","defaultLocale","locale","prefix","__webpack_public_path__","envConfig","serverRuntimeConfig","publicRuntimeConfig","runtimeConfig","asPath","require","isFallback","localePathResult","normalizeLocalePath","pageLoader","PageLoader","register","p","setTimeout","headManager","appElement","React","Component","componentDidCatch","componentDidMount","router","location","hydrateProps","String","querystring","_h","shallow","componentDidUpdate","scrollToHash","hash","el","render","emitter","opts","webpackHMR","page","CachedApp","mod","onPerfEntry","uniqueID","Date","Math","entries","perfStartEntry","id","startTime","value","label","entryType","initialErr","styleSheets","isValidElementType","error","node","getNodeError","initialProps","App","initialStyleSheets","Boolean","subscription","initClientModule","initClientErr","console","renderCtx","renderingProps","renderError","doRender","renderErr","onClientErrorModule","onClientErrorErr","AppTree","wrapApp","appCtx","ctx","pathname","Promise","renderErrorProps","initProps","isInitialRender","ReactDOM","reactRoot","hydrate","ST","performance","clearMarks","navStartEntries","measure","mark","wrappedAppProps","appProps","lastAppProps","canceled","renderPromise","lastRenderReject","resolvePromise","resolve","reject","currentStyleTags","currentHrefs","tag","styleTag","desiredHrefs","s","idx","referenceNode","targetTag","href","getComputedStyle","elem","onStart","renderReactElement","callback"],"mappings":"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","sourcesContent":["/* global location */\nimport '@next/polyfill-module'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HeadManagerContext } from '../next-server/lib/head-manager-context'\nimport mitt from '../next-server/lib/mitt'\nimport { RouterContext } from '../next-server/lib/router-context'\nimport type Router from '../next-server/lib/router/router'\nimport type {\n  AppComponent,\n  AppProps,\n  PrivateRouteInfo,\n} from '../next-server/lib/router/router'\nimport {\n  delBasePath,\n  hasBasePath,\n  delLocale,\n} from '../next-server/lib/router/router'\nimport { isDynamicRoute } from '../next-server/lib/router/utils/is-dynamic'\nimport * as querystring from '../next-server/lib/router/utils/querystring'\nimport * as envConfig from '../next-server/lib/runtime-config'\nimport type { NEXT_DATA } from '../next-server/lib/utils'\nimport { getURL, loadGetInitialProps, ST } from '../next-server/lib/utils'\nimport initHeadManager from './head-manager'\nimport PageLoader, { looseToArray, StyleSheetTuple } from './page-loader'\nimport measureWebVitals from './performance-relayer'\nimport { createRouter, makePublicRouterInstance } from './router'\n\n/// <reference types=\"react-dom/experimental\" />\n\ndeclare let __webpack_public_path__: string\n\ndeclare global {\n  interface Window {\n    /* test fns */\n    __NEXT_HYDRATED?: boolean\n    __NEXT_HYDRATED_CB?: () => void\n\n    /* prod */\n    __NEXT_PRELOADREADY?: (ids?: string[]) => void\n    __NEXT_DATA__: NEXT_DATA\n    __NEXT_P: any[]\n  }\n}\n\ntype RenderRouteInfo = PrivateRouteInfo & { App: AppComponent }\ntype RenderErrorProps = Omit<RenderRouteInfo, 'Component' | 'styleSheets'>\n\nconst data: typeof window['__NEXT_DATA__'] = JSON.parse(\n  document.getElementById('__NEXT_DATA__')!.textContent!\n)\nwindow.__NEXT_DATA__ = data\n\nexport const version = process.env.__NEXT_VERSION\n\nconst {\n  props: hydrateProps,\n  err: hydrateErr,\n  page,\n  query,\n  buildId,\n  assetPrefix,\n  runtimeConfig,\n  dynamicIds,\n  isFallback,\n  head: initialHeadData,\n  locales,\n  defaultLocale,\n} = data\n\nlet { locale } = data\n\nconst prefix = assetPrefix || ''\n\n// With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time\n// So, this is how we do it in the client side at runtime\n__webpack_public_path__ = `${prefix}/_next/` //eslint-disable-line\n// Initialize next/config with the environment configuration\nenvConfig.setConfig({\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: runtimeConfig || {},\n})\n\nlet asPath = getURL()\n\n// make sure not to attempt stripping basePath for 404s\nif (hasBasePath(asPath)) {\n  asPath = delBasePath(asPath)\n}\n\nasPath = delLocale(asPath, locale)\n\nif (process.env.__NEXT_i18n_SUPPORT) {\n  const {\n    normalizeLocalePath,\n  } = require('../next-server/lib/i18n/normalize-locale-path')\n\n  if (isFallback && locales) {\n    const localePathResult = normalizeLocalePath(asPath, locales)\n\n    if (localePathResult.detectedLocale) {\n      asPath = asPath.substr(localePathResult.detectedLocale.length + 1)\n      locale = localePathResult.detectedLocale\n    }\n  }\n}\n\ntype RegisterFn = (input: [string, () => void]) => void\n\nconst pageLoader = new PageLoader(buildId, prefix, page)\nconst register: RegisterFn = ([r, f]) => pageLoader.registerPage(r, f)\nif (window.__NEXT_P) {\n  // Defer page registration for another tick. This will increase the overall\n  // latency in hydrating the page, but reduce the total blocking time.\n  window.__NEXT_P.map((p) => setTimeout(() => register(p), 0))\n}\nwindow.__NEXT_P = []\n;(window.__NEXT_P as any).push = register\n\nconst headManager = initHeadManager(initialHeadData)\nconst appElement = document.getElementById('__next')\n\nlet lastAppProps: AppProps\nlet lastRenderReject: (() => void) | null\nlet webpackHMR: any\nexport let router: Router\nlet CachedComponent: React.ComponentType\nlet cachedStyleSheets: StyleSheetTuple[]\nlet CachedApp: AppComponent, onPerfEntry: (metric: any) => void\n\nclass Container extends React.Component<{\n  fn: (err: Error, info?: any) => void\n}> {\n  componentDidCatch(componentErr: Error, info: any) {\n    this.props.fn(componentErr, info)\n  }\n\n  componentDidMount() {\n    this.scrollToHash()\n\n    // We need to replace the router state if:\n    // - the page was (auto) exported and has a query string or search (hash)\n    // - it was auto exported and is a dynamic route (to provide params)\n    // - if it is a client-side skeleton (fallback render)\n    if (\n      router.isSsr &&\n      (isFallback ||\n        (data.nextExport &&\n          (isDynamicRoute(router.pathname) || location.search)) ||\n        (hydrateProps && hydrateProps.__N_SSG && location.search))\n    ) {\n      // update query on mount for exported pages\n      router.replace(\n        router.pathname +\n          '?' +\n          String(\n            querystring.assign(\n              querystring.urlQueryToSearchParams(router.query),\n              new URLSearchParams(location.search)\n            )\n          ),\n        asPath,\n        {\n          // @ts-ignore\n          // WARNING: `_h` is an internal option for handing Next.js\n          // client-side hydration. Your app should _never_ use this property.\n          // It may change at any time without notice.\n          _h: 1,\n          // Fallback pages must trigger the data fetch, so the transition is\n          // not shallow.\n          // Other pages (strictly updating query) happens shallowly, as data\n          // requirements would already be present.\n          shallow: !isFallback,\n        }\n      )\n    }\n  }\n\n  componentDidUpdate() {\n    this.scrollToHash()\n  }\n\n  scrollToHash() {\n    let { hash } = location\n    hash = hash && hash.substring(1)\n    if (!hash) return\n\n    const el = document.getElementById(hash)\n    if (!el) return\n\n    // If we call scrollIntoView() in here without a setTimeout\n    // it won't scroll properly.\n    setTimeout(() => el.scrollIntoView(), 0)\n  }\n\n  render() {\n    if (process.env.NODE_ENV === 'production') {\n      return this.props.children\n    } else {\n      const { ReactDevOverlay } = require('@next/react-dev-overlay/lib/client')\n      return <ReactDevOverlay>{this.props.children}</ReactDevOverlay>\n    }\n  }\n}\n\nexport const emitter = mitt()\n\nexport default async (opts: { webpackHMR?: any } = {}) => {\n  // This makes sure this specific lines are removed in production\n  if (process.env.NODE_ENV === 'development') {\n    webpackHMR = opts.webpackHMR\n  }\n  const { page: app, mod } = await pageLoader.loadPage('/_app')\n  CachedApp = app as AppComponent\n\n  if (mod && mod.reportWebVitals) {\n    onPerfEntry = ({\n      id,\n      name,\n      startTime,\n      value,\n      duration,\n      entryType,\n      entries,\n    }) => {\n      // Combines timestamp with random number for unique ID\n      const uniqueID = `${Date.now()}-${\n        Math.floor(Math.random() * (9e12 - 1)) + 1e12\n      }`\n      let perfStartEntry\n\n      if (entries && entries.length) {\n        perfStartEntry = entries[0].startTime\n      }\n\n      mod.reportWebVitals({\n        id: id || uniqueID,\n        name,\n        startTime: startTime || perfStartEntry,\n        value: value == null ? duration : value,\n        label:\n          entryType === 'mark' || entryType === 'measure'\n            ? 'custom'\n            : 'web-vital',\n      })\n    }\n  }\n\n  let initialErr = hydrateErr\n\n  try {\n    ;({\n      page: CachedComponent,\n      styleSheets: cachedStyleSheets,\n    } = await pageLoader.loadPage(page))\n\n    if (process.env.NODE_ENV !== 'production') {\n      const { isValidElementType } = require('react-is')\n      if (!isValidElementType(CachedComponent)) {\n        throw new Error(\n          `The default export is not a React Component in page: \"${page}\"`\n        )\n      }\n    }\n  } catch (error) {\n    // This catches errors like throwing in the top level of a module\n    initialErr = error\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    const { getNodeError } = require('@next/react-dev-overlay/lib/client')\n    // Server-side runtime errors need to be re-thrown on the client-side so\n    // that the overlay is rendered.\n    if (initialErr) {\n      if (initialErr === hydrateErr) {\n        setTimeout(() => {\n          let error\n          try {\n            // Generate a new error object. We `throw` it because some browsers\n            // will set the `stack` when thrown, and we want to ensure ours is\n            // not overridden when we re-throw it below.\n            throw new Error(initialErr!.message)\n          } catch (e) {\n            error = e\n          }\n\n          error.name = initialErr!.name\n          error.stack = initialErr!.stack\n\n          const node = getNodeError(error)\n          throw node\n        })\n      }\n      // We replaced the server-side error with a client-side error, and should\n      // no longer rewrite the stack trace to a Node error.\n      else {\n        setTimeout(() => {\n          throw initialErr\n        })\n      }\n    }\n  }\n\n  if (window.__NEXT_PRELOADREADY) {\n    await window.__NEXT_PRELOADREADY(dynamicIds)\n  }\n\n  router = createRouter(page, query, asPath, {\n    initialProps: hydrateProps,\n    pageLoader,\n    App: CachedApp,\n    Component: CachedComponent,\n    initialStyleSheets: cachedStyleSheets,\n    wrapApp,\n    err: initialErr,\n    isFallback: Boolean(isFallback),\n    subscription: ({ Component, styleSheets, props, err }, App) =>\n      render({ App, Component, styleSheets, props, err }),\n    locale,\n    locales,\n    defaultLocale,\n  })\n\n  // call init-client middleware\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    import('next-plugin-loader?middleware=on-init-client!')\n      .then((initClientModule) => {\n        return initClientModule.default({ router })\n      })\n      .catch((initClientErr) => {\n        console.error('Error calling client-init for plugins', initClientErr)\n      })\n  }\n\n  const renderCtx = {\n    App: CachedApp,\n    Component: CachedComponent,\n    styleSheets: cachedStyleSheets,\n    props: hydrateProps,\n    err: initialErr,\n  }\n\n  if (process.env.NODE_ENV === 'production') {\n    render(renderCtx)\n    return emitter\n  } else {\n    return { emitter, render, renderCtx }\n  }\n}\n\nexport async function render(renderingProps: RenderRouteInfo) {\n  if (renderingProps.err) {\n    await renderError(renderingProps)\n    return\n  }\n\n  try {\n    await doRender(renderingProps)\n  } catch (renderErr) {\n    // bubble up cancelation errors\n    if (renderErr.cancelled) {\n      throw renderErr\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      // Ensure this error is displayed in the overlay in development\n      setTimeout(() => {\n        throw renderErr\n      })\n    }\n    await renderError({ ...renderingProps, err: renderErr })\n  }\n}\n\n// This method handles all runtime and debug errors.\n// 404 and 500 errors are special kind of errors\n// and they are still handle via the main render method.\nexport function renderError(renderErrorProps: RenderErrorProps) {\n  const { App, err } = renderErrorProps\n\n  // In development runtime errors are caught by our overlay\n  // In production we catch runtime errors using componentDidCatch which will trigger renderError\n  if (process.env.NODE_ENV !== 'production') {\n    // A Next.js rendering runtime error is always unrecoverable\n    // FIXME: let's make this recoverable (error in GIP client-transition)\n    webpackHMR.onUnrecoverableError()\n\n    // We need to render an empty <App> so that the `<ReactDevOverlay>` can\n    // render itself.\n    return doRender({\n      App: () => null,\n      props: {},\n      Component: () => null,\n      styleSheets: [],\n    })\n  }\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    import('next-plugin-loader?middleware=on-error-client!')\n      .then((onClientErrorModule) => {\n        return onClientErrorModule.default({ err })\n      })\n      .catch((onClientErrorErr) => {\n        console.error(\n          'error calling on-error-client for plugins',\n          onClientErrorErr\n        )\n      })\n  }\n\n  // Make sure we log the error to the console, otherwise users can't track down issues.\n  console.error(err)\n  return pageLoader\n    .loadPage('/_error')\n    .then(({ page: ErrorComponent, styleSheets }) => {\n      // In production we do a normal render with the `ErrorComponent` as component.\n      // If we've gotten here upon initial render, we can use the props from the server.\n      // Otherwise, we need to call `getInitialProps` on `App` before mounting.\n      const AppTree = wrapApp(App)\n      const appCtx = {\n        Component: ErrorComponent,\n        AppTree,\n        router,\n        ctx: { err, pathname: page, query, asPath, AppTree },\n      }\n      return Promise.resolve(\n        renderErrorProps.props\n          ? renderErrorProps.props\n          : loadGetInitialProps(App, appCtx)\n      ).then((initProps) =>\n        doRender({\n          ...renderErrorProps,\n          err,\n          Component: ErrorComponent,\n          styleSheets,\n          props: initProps,\n        })\n      )\n    })\n}\n\n// If hydrate does not exist, eg in preact.\nlet isInitialRender = typeof ReactDOM.hydrate === 'function'\nlet reactRoot: any = null\nfunction renderReactElement(reactEl: JSX.Element, domEl: HTMLElement) {\n  if (process.env.__NEXT_REACT_MODE !== 'legacy') {\n    if (!reactRoot) {\n      const opts = { hydrate: true }\n      reactRoot =\n        process.env.__NEXT_REACT_MODE === 'concurrent'\n          ? (ReactDOM as any).unstable_createRoot(domEl, opts)\n          : (ReactDOM as any).unstable_createBlockingRoot(domEl, opts)\n    }\n    reactRoot.render(reactEl)\n  } else {\n    // mark start of hydrate/render\n    if (ST) {\n      performance.mark('beforeRender')\n    }\n\n    // The check for `.hydrate` is there to support React alternatives like preact\n    if (isInitialRender) {\n      ReactDOM.hydrate(reactEl, domEl, markHydrateComplete)\n      isInitialRender = false\n\n      if (onPerfEntry && ST) {\n        measureWebVitals(onPerfEntry)\n      }\n    } else {\n      ReactDOM.render(reactEl, domEl, markRenderComplete)\n    }\n  }\n}\n\nfunction markHydrateComplete() {\n  if (!ST) return\n\n  performance.mark('afterHydrate') // mark end of hydration\n\n  performance.measure(\n    'Next.js-before-hydration',\n    'navigationStart',\n    'beforeRender'\n  )\n  performance.measure('Next.js-hydration', 'beforeRender', 'afterHydrate')\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-hydration').forEach(onPerfEntry)\n  }\n  clearMarks()\n}\n\nfunction markRenderComplete() {\n  if (!ST) return\n\n  performance.mark('afterRender') // mark end of render\n  const navStartEntries = performance.getEntriesByName('routeChange', 'mark')\n\n  if (!navStartEntries.length) {\n    return\n  }\n\n  performance.measure(\n    'Next.js-route-change-to-render',\n    navStartEntries[0].name,\n    'beforeRender'\n  )\n  performance.measure('Next.js-render', 'beforeRender', 'afterRender')\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-render').forEach(onPerfEntry)\n    performance\n      .getEntriesByName('Next.js-route-change-to-render')\n      .forEach(onPerfEntry)\n  }\n  clearMarks()\n  ;['Next.js-route-change-to-render', 'Next.js-render'].forEach((measure) =>\n    performance.clearMeasures(measure)\n  )\n}\n\nfunction clearMarks() {\n  ;[\n    'beforeRender',\n    'afterHydrate',\n    'afterRender',\n    'routeChange',\n  ].forEach((mark) => performance.clearMarks(mark))\n}\n\nfunction AppContainer({\n  children,\n}: React.PropsWithChildren<{}>): React.ReactElement {\n  return (\n    <Container\n      fn={(error) =>\n        renderError({ App: CachedApp, err: error }).catch((err) =>\n          console.error('Error rendering page: ', err)\n        )\n      }\n    >\n      <RouterContext.Provider value={makePublicRouterInstance(router)}>\n        <HeadManagerContext.Provider value={headManager}>\n          {children}\n        </HeadManagerContext.Provider>\n      </RouterContext.Provider>\n    </Container>\n  )\n}\n\nconst wrapApp = (App: AppComponent) => (\n  wrappedAppProps: Record<string, any>\n) => {\n  const appProps: AppProps = {\n    ...wrappedAppProps,\n    Component: CachedComponent,\n    err: hydrateErr,\n    router,\n  }\n  return (\n    <AppContainer>\n      <App {...appProps} />\n    </AppContainer>\n  )\n}\n\nfunction doRender({\n  App,\n  Component,\n  props,\n  err,\n  styleSheets,\n}: RenderRouteInfo): Promise<any> {\n  Component = Component || lastAppProps.Component\n  props = props || lastAppProps.props\n\n  const appProps: AppProps = {\n    ...props,\n    Component,\n    err,\n    router,\n  }\n  // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.\n  lastAppProps = appProps\n\n  let canceled = false\n  let resolvePromise: () => void\n  const renderPromise = new Promise((resolve, reject) => {\n    if (lastRenderReject) {\n      lastRenderReject()\n    }\n    resolvePromise = () => {\n      lastRenderReject = null\n      resolve()\n    }\n    lastRenderReject = () => {\n      canceled = true\n      lastRenderReject = null\n\n      const error: any = new Error('Cancel rendering route')\n      error.cancelled = true\n      reject(error)\n    }\n  })\n\n  // This function has a return type to ensure it doesn't start returning a\n  // Promise. It should remain synchronous.\n  function onStart(): boolean {\n    if (\n      // We can skip this during hydration. Running it wont cause any harm, but\n      // we may as well save the CPU cycles.\n      isInitialRender ||\n      // We use `style-loader` in development, so we don't need to do anything\n      // unless we're in production:\n      process.env.NODE_ENV !== 'production'\n    ) {\n      return false\n    }\n\n    const currentStyleTags = looseToArray<HTMLStyleElement>(\n      document.querySelectorAll('style[data-n-href]')\n    )\n    const currentHrefs = new Set(\n      currentStyleTags.map((tag) => tag.getAttribute('data-n-href'))\n    )\n\n    styleSheets.forEach(({ href, text }) => {\n      if (!currentHrefs.has(href)) {\n        const styleTag = document.createElement('style')\n        styleTag.setAttribute('data-n-href', href)\n        styleTag.setAttribute('media', 'x')\n\n        document.head.appendChild(styleTag)\n        styleTag.appendChild(document.createTextNode(text))\n      }\n    })\n    return true\n  }\n\n  function onCommit() {\n    if (\n      // We use `style-loader` in development, so we don't need to do anything\n      // unless we're in production:\n      process.env.NODE_ENV === 'production' &&\n      // We can skip this during hydration. Running it wont cause any harm, but\n      // we may as well save the CPU cycles:\n      !isInitialRender &&\n      // Ensure this render was not canceled\n      !canceled\n    ) {\n      const desiredHrefs = new Set(styleSheets.map((s) => s.href))\n      const currentStyleTags = looseToArray<HTMLStyleElement>(\n        document.querySelectorAll('style[data-n-href]')\n      )\n      const currentHrefs = currentStyleTags.map(\n        (tag) => tag.getAttribute('data-n-href')!\n      )\n\n      // Toggle `<style>` tags on or off depending on if they're needed:\n      for (let idx = 0; idx < currentHrefs.length; ++idx) {\n        if (desiredHrefs.has(currentHrefs[idx])) {\n          currentStyleTags[idx].removeAttribute('media')\n        } else {\n          currentStyleTags[idx].setAttribute('media', 'x')\n        }\n      }\n\n      // Reorder styles into intended order:\n      let referenceNode = document.querySelector('noscript[data-n-css]')\n      if (\n        // This should be an invariant:\n        referenceNode\n      ) {\n        styleSheets.forEach(({ href }) => {\n          const targetTag = document.querySelector(\n            `style[data-n-href=\"${href}\"]`\n          )\n          if (\n            // This should be an invariant:\n            targetTag\n          ) {\n            referenceNode!.parentNode!.insertBefore(\n              targetTag,\n              referenceNode!.nextSibling\n            )\n            referenceNode = targetTag\n          }\n        })\n      }\n\n      // Finally, clean up server rendered stylesheets:\n      looseToArray<HTMLLinkElement>(\n        document.querySelectorAll('link[data-n-p]')\n      ).forEach((el) => {\n        el.parentNode!.removeChild(el)\n      })\n\n      // Force browser to recompute layout, which should prevent a flash of\n      // unstyled content:\n      getComputedStyle(document.body, 'height')\n    }\n\n    resolvePromise()\n  }\n\n  const elem = (\n    <Root callback={onCommit}>\n      <AppContainer>\n        <App {...appProps} />\n      </AppContainer>\n    </Root>\n  )\n\n  onStart()\n\n  // We catch runtime errors using componentDidCatch which will trigger renderError\n  renderReactElement(\n    process.env.__NEXT_STRICT_MODE ? (\n      <React.StrictMode>{elem}</React.StrictMode>\n    ) : (\n      elem\n    ),\n    appElement!\n  )\n\n  return renderPromise\n}\n\nfunction Root({\n  callback,\n  children,\n}: React.PropsWithChildren<{\n  callback: () => void\n}>): React.ReactElement {\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  React.useLayoutEffect(() => callback(), [callback])\n  if (process.env.__NEXT_TEST_MODE) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      window.__NEXT_HYDRATED = true\n\n      if (window.__NEXT_HYDRATED_CB) {\n        window.__NEXT_HYDRATED_CB()\n      }\n    }, [])\n  }\n  return children as React.ReactElement\n}\n"]},"metadata":{},"sourceType":"script"}